version: '3.8'

services:
  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:latest
    container_name: recommendation-qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - ./qdrant_storage:/qdrant/storage
    environment:
      - QDRANT__SERVICE__GRPC_PORT=6334
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - recommendation-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: recommendation-redis
    ports:
      - "6379:6379"
    volumes:
      - ./redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - recommendation-network

  # MLflow Tracking Server
  mlflow:
    image: ghcr.io/mlflow/mlflow:latest
    container_name: recommendation-mlflow
    ports:
      - "5000:5000"
    volumes:
      - ./mlflow:/mlflow
    command: >
      mlflow server
      --host 0.0.0.0
      --port 5000
      --backend-store-uri sqlite:///mlflow/mlflow.db
      --default-artifact-root /mlflow/artifacts
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - recommendation-network

  # Prometheus Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: recommendation-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - recommendation-network

  # Grafana Dashboard
  grafana:
    image: grafana/grafana:latest
    container_name: recommendation-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - ./grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - recommendation-network

  # FastAPI Application (will be built later)
  # Uncomment when Dockerfile is ready
  # api:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: recommendation-api
  #   ports:
  #     - "8080:8080"
  #   environment:
  #     - QDRANT_HOST=qdrant
  #     - QDRANT_PORT=6333
  #     - REDIS_HOST=redis
  #     - REDIS_PORT=6379
  #     - MLFLOW_TRACKING_URI=http://mlflow:5000
  #   depends_on:
  #     - qdrant
  #     - redis
  #     - mlflow
  #   volumes:
  #     - ./models:/app/models
  #     - ./data:/app/data
  #   networks:
  #     - recommendation-network

networks:
  recommendation-network:
    driver: bridge
